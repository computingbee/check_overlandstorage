#Configuration file for icinga2
object CheckCommand "check-overland" {
  import "plugin-check-command"
  import "ipv4-or-ipv6"

  command = [ PluginContribDir + "/check_overlandstorage.sh" ]

  arguments = {
    "-H" = {
             value = "$address$"
             description = "Snapserver address"
     }
    "-C" = {
             value = "$overland_snmpv2$"
             description = "SNMPv2 community for snapserver"
    }
   "-t" = {
             value = "$overland_check_type$"
             description = "snapserver check type: disk|raid|nic|info"
   }

  }

  vars.overland_snmpv2 = "<community>"
}

apply Service "svc_overland_disk" {
  import "generic-service"

  check_command = "check-overland"

  vars.overland_check_type = "disk"

  vars.notification["sms"] = {
   groups = [ "sms_users" ]
  }

  assign where host.vars.os == "GOS"
}

apply Service "svc_overland_raid" {
  import "generic-service"

  check_command = "check-overland"

  vars.overland_check_type = "raid"

  vars.notification["sms"] = {
   groups = [ "sms_users" ]
  }

  assign where host.vars.os == "GOS"
}

apply Service "svc_overland_nic" {
  import "generic-service"

  check_command = "check-overland"

  vars.overland_check_type = "nic"

  vars.notification["sms"] = {
   groups = [ "sms_users" ]
  }

  assign where host.vars.os == "GOS"
}

template Host "generic-storage" {
  import "generic-host"
 
 vars.notification["mail"] = {
    groups = [ "mailusers" ]
 }
 
 vars.notification["sms"] = {
   groups = [ "sms_users" ]
 }
}

object Host "<hostname>" {
  import "generic-storage"
  address = "<host_ip_address>"
  vars.os = "GOS"
  vars.http_vhosts["http"] = {
    http_uri = "/sadmin"
  }
}
